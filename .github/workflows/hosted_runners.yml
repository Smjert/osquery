#
# Copyright (c) 2014-present, The osquery authors
#
# This source code is licensed as defined by the LICENSE file found in the
# root directory of this source tree.
#
# SPDX-License-Identifier: (Apache-2.0 OR GPL-2.0-only)
#

# Due to a limitation in how GitHub Actions works, we can't reference
# jobs in another file inside the `needs` statement.
#
# This configuration file takes care of the Windows, macOS and Linux
# builds on the x86 platform.
name: build_x86

on:
  # Run this workflow once every 6 hours against the master branch
  schedule:
   - cron: "0 */6 * * *"

  push:
    branches:
      - 'stefano/ci/x86_64-disk-space'

    tags:
      - '*'

  pull_request:
    branches:
      - '*'

# Cancel old jobs of a PR if a new job is started.
# Fallback on using the run id if it's not a PR, which is unique, so no job canceling.
concurrency:
  group: hosted-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

# Please remember to update values for both x86 and aarch64 workflows.
env:
  PACKAGING_REPO: https://github.com/osquery/osquery-packaging
  PACKAGING_COMMIT: 4caa2c54f0d893c1efa47932571046bbce156c52
  SUBMODULE_CACHE_VERSION: 2

# If the initial code sanity checks are passing, then one job
# per [`platform` * `build_type`] will start, building osquery
# and generating packages that are later attached to the commit
# (or PR) as build artifacts
jobs:
  run-matrix:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        build_type: [Release, RelWithDebInfo]

    outputs:
      labelRelease: ${{ steps.step1.outputs.labelRelease }}
      labelRelWithDebInfo: ${{ steps.step1.outputs.labelRelWithDebInfo }}
      pippoRelease: ${{ steps.step1.outputs.pippoRelease }}
      pippoRelWithDebInfo: ${{ steps.step1.outputs.pippoRelWithDebInfo }}

    steps:
      - id: step1
        run: |
          echo "label${{ matrix.build_type }}=${{ matrix.build_type }}" >> "$GITHUB_OUTPUT"
          echo "pippo${{ matrix.build_type }}=babbo-${{ matrix.build_type }}" >> "$GITHUB_OUTPUT"

  check-matrix:
    needs: run-matrix

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        build_type: [Release, RelWithDebInfo]

    steps:
      - name: Print label
        run: |
          echo '${{ toJSON( needs.run-matrix.outputs ) }}' | jq ".label${{ matrix.build_type }}"
          echo '${{ toJSON( needs.run-matrix.outputs ) }}'' | jq ".pippo${{ matrix.build_type }}"
